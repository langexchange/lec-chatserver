# https://github.com/processone/docker-ejabberd/blob/master/ecs/README.md
###

include_config_file:
  "/home/ejabberd/conf/env.yml":
    allow_only:
      - sql_database
      - sql_username
      - sql_password
      - sql_server
      - sql_port
      - sql_type
      - extauth_program
      - hosts

# hosts:
#   - "localhost" 


auth_method: external
auth_use_cache: false
auth_password_format: scram
auth_scram_hash: sha256
extauth_program: "python3 /home/ejabberd/conf/auth_script/main.py"

## Logging
loglevel: debug

## Database
default_db: "sql"

# ##Certificate
# certfiles:
#   - /home/ejabberd/conf/certificates/localhost.pem

listen:
  -
    port: 5222
    ip: "::"
    module: ejabberd_c2s
    max_stanza_size: 262144
    shaper: c2s_shaper
    access: c2s
    # starttls_required: true

  -
    port: 5280
    ip: "::"
    module: ejabberd_http
    request_handlers:
      /admin: ejabberd_web_admin
      /api: mod_http_api
      /.well-known/acme-challenge: ejabberd_acme
      /ws: ejabberd_http_ws
      /oauth: ejabberd_oauth
      /upload: mod_http_upload
    custom_headers:
      "Access-Control-Allow-Origin": "langexchange.giize.com"
      "Access-Control-Allow-Methods": "*"
      "Access-Control-Allow-Headers": "*"
      "Access-Control-Allow-Credentials": "true"
      # "Access-Control-Allow-Headers": "Content-Type"
      "Access-Control-Expose-Headers": "*"
      "Access-Control-Max-Age": "86400"

  -
    port: 3478
    ip: "::"
    transport: udp
    module: ejabberd_stun
    use_turn: true
    ## The server's public IPv4 address:
    # turn_ipv4_address: "203.0.113.3"
    ## The server's public IPv6 address:
    # turn_ipv6_address: "2001:db8::3"
  -
    port: 1883
    ip: "::"
    module: mod_mqtt
    backlog: 1000

s2s_use_starttls: optional

acl:
  local:
    user_regexp: ""
  loopback:
    ip:
      - 127.0.0.0/8
      - ::1/128
  admin:
    - user: vutran@localhost
    - user: admin@localhost

access_rules:
  local:
    allow: local
  c2s:
    deny: blocked
    allow: all
  announce:
    allow: admin
  configure:
    allow: admin
  muc_create:
    allow: local
  pubsub_createnode:
    allow: local
  trusted_network:
    allow: loopback
  jwt_only:
    deny: admins
    allow: all

api_permissions:
  "console commands":
    from:
      - ejabberd_ctl
    who: all
    what: "*"
  "admin access":
    who:
      access:
        allow:
          - acl: loopback
          - acl: admin
      # oauth:
      #   scope: "ejabberd:admin"
      #   access:
      #     allow:
      #       - acl: loopback
      #       - acl: admin
    what:
      - "*"
      - "!stop"
      - "!start"
  "public commands":
    who:
      access:
        allow: all
    what:
      - "registered_users"
  
   # what:
   #   -
   #   - status
   #   - connected_users_number

shaper:
  normal:
    rate: 3000
    burst_size: 20000
  fast: 100000

shaper_rules:
  max_user_sessions: 10
  max_user_offline_messages:
    5000: admin
    100: all
  c2s_shaper:
    none: admin
    normal: all
  s2s_shaper: fast

modules:
  mod_host_meta:
    websocket_url: "ws://localhost:5280/xmpp-websocket"
  mod_mam:
    ## Mnesia is limited to 2GB, better to use an SQL backend
    ## For small servers SQLite is a good fit and is very easy
    ## to configure. Uncomment this when you have SQL configured:
    # db_type: sql
    assume_mam_usage: true
    default: always
    compress_xml: true
  mod_adhoc: {}
  # mod_admin_extra: {}
  mod_announce:
    access: announce
  mod_avatar: {}
  mod_blocking: {}
  mod_bosh: {}
  mod_caps: {}
  mod_carboncopy: {}
  mod_client_state: {}
  mod_configure: {}
  mod_disco: {}
  mod_fail2ban: {}
  mod_http_api: {}
  mod_http_upload:
    access: c2s
    custom_headers:
      "Access-Control-Allow-Origin": "*"
      "Access-Control-Allow-Methods": "GET,HEAD,PUT,OPTIONS"
      "Access-Control-Allow-Headers": "Content-Type"
    external_secret: "YOqe6JUVReE/iBJPDgSe25JYjD6vnz7b1Y7cRwRB"
    get_url: "https://localhost/app/chat/v1/upload"
    jid_in_url: sha1
    name: LangUpload
    put_url: "https://localhost/app/chat/v1/upload"
  mod_last: {}

  mod_muc:
    access:
      - allow
    access_admin:
      - allow: admin
    access_create: muc_create
    access_persistent: muc_create
    access_mam:
      - allow
    default_room_options:
      mam: true
  mod_muc_admin: {}
  mod_offline:
    access_max_user_messages: max_user_offline_messages
  mod_ping: {}
  mod_privacy: {}
  mod_private: {}
  mod_proxy65:
    access: local
    max_connections: 5
  mod_pubsub:
    access_createnode: pubsub_createnode
    plugins:
      - flat
      - pep
    force_node_config:
      ## Avoid buggy clients to make their bookmarks public
      storage:bookmarks:
        access_model: whitelist
  mod_push: {}
  mod_push_keepalive: {}
  mod_register:
    ## Only accept registration requests from the "trusted"
    ## network (see access_rules section above).
    ## Think twice before enabling registration from any
    ## address. See the Jabber SPAM Manifesto for details:
    ## https://github.com/ge0rg/jabber-spam-fighting-manifesto
    ip_access: trusted_network
    # access: all
    # access_from:
    #   - allow: all
  mod_roster:
    versioning: true
  mod_s2s_dialback: {}
  mod_shared_roster: {}
  mod_stream_mgmt:
    resend_on_timeout: if_offline
  mod_stun_disco: {}
  mod_vcard: {}
  mod_vcard_xupdate: {}
  mod_version:
    show_os: false